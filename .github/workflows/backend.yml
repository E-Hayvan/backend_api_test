name: Backend CI/CD

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: ${{ secrets.EHAYVAN_SPRING_DATASOURCE_PASSWORD }}
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
          
    steps:
    - uses: actions/checkout@v3

    - name: Create new database
      env:
        PGPASSWORD: ${{ secrets.EHAYVAN_SPRING_DATASOURCE_PASSWORD }}
      run: psql -h localhost -U postgres -c 'CREATE DATABASE e_hayvan_test_database;'
    - name: Set Environment Variables
      run: | 
        echo "EHAYVAN_SPRING_DATASOURCE_URL=${{ secrets.EHAYVAN_SPRING_DATASOURCE_URL }}" >> $GITHUB_ENV
        echo "EHAYVAN_SPRING_DATASOURCE_USERNAME=${{ secrets.EHAYVAN_SPRING_DATASOURCE_USERNAME }}" >> $GITHUB_ENV
        echo "EHAYVAN_SPRING_DATASOURCE_PASSWORD=${{ secrets.EHAYVAN_SPRING_DATASOURCE_PASSWORD }}" >> $GITHUB_ENV
        echo "EHAYVAN_SPRING_DATASOURCE_DRIVER_CLASS_NAME=${{ secrets.EHAYVAN_SPRING_DATASOURCE_DRIVER_CLASS_NAME }}" >> $GITHUB_ENV
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    - name: Build Spring Boot Project
      run: mvn clean install -DskipTests
    - name: Run tests with Maven for Spring Boot Project
      run: mvn -B test --file pom.xml
